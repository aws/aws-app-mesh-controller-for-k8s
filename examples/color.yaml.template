---
apiVersion: v1
kind: Namespace
metadata:
  labels:
    appmesh.k8s.aws/sidecarInjectorWebhook: enabled
  name: ${APP_NAMESPACE}
---
apiVersion: appmesh.k8s.aws/v1beta1
kind: Mesh
metadata:
  name: ${MESH_NAME}
---
apiVersion: appmesh.k8s.aws/v1beta1
kind: VirtualNode
metadata:
  name: colorgateway
  namespace: ${APP_NAMESPACE}
spec:
  meshName: ${MESH_NAME}
  listeners:
    - portMapping:
        port: 9080
        protocol: http
  serviceDiscovery:
    dns:
      hostName: colorgateway.${APP_NAMESPACE}.svc.cluster.local
  backends:
    - virtualService:
        virtualServiceName: colorteller.${APP_NAMESPACE}
  logging:
    accessLog:
      file:
        path: /dev/stdout
---
apiVersion: appmesh.k8s.aws/v1beta1
kind: VirtualNode
metadata:
  name: colorteller
  namespace: ${APP_NAMESPACE}
spec:
  meshName: ${MESH_NAME}
  listeners:
    - portMapping:
        port: 9080
        protocol: http
  serviceDiscovery:
    dns:
      hostName: colorteller.${APP_NAMESPACE}.svc.cluster.local
---
apiVersion: appmesh.k8s.aws/v1beta1
kind: VirtualNode
metadata:
  name: colorteller-black
  namespace: ${APP_NAMESPACE}
spec:
  meshName: ${MESH_NAME}
  listeners:
    - portMapping:
        port: 9080
        protocol: http
  serviceDiscovery:
    dns:
      hostName: colorteller-black.${APP_NAMESPACE}.svc.cluster.local
---
apiVersion: appmesh.k8s.aws/v1beta1
kind: VirtualNode
metadata:
  name: colorteller-blue
  namespace: ${APP_NAMESPACE}
spec:
  meshName: ${MESH_NAME}
  listeners:
    - portMapping:
        port: 9080
        protocol: http
  serviceDiscovery:
    dns:
      hostName: colorteller-blue.${APP_NAMESPACE}.svc.cluster.local
---
apiVersion: appmesh.k8s.aws/v1beta1
kind: VirtualNode
metadata:
  name: colorteller-red
  namespace: ${APP_NAMESPACE}
spec:
  meshName: ${MESH_NAME}
  listeners:
    - portMapping:
        port: 9080
        protocol: http
  serviceDiscovery:
    dns:
      hostName: colorteller-red.${APP_NAMESPACE}.svc.cluster.local
---
apiVersion: appmesh.k8s.aws/v1beta1
kind: VirtualService
metadata:
  name: colorteller.${APP_NAMESPACE}
  namespace: ${APP_NAMESPACE}
spec:
  meshName: ${MESH_NAME}
  virtualRouter:
    listeners:
      - portMapping:
          port: 9080
          protocol: http
  routes:
    - name: color-route
      http:
        match:
          prefix: /
        action:
          weightedTargets:
            - virtualNodeName: colorteller
              weight: 1
            - virtualNodeName: colorteller-blue
              weight: 1
            - virtualNodeName: colorteller-black
              weight: 1
---
apiVersion: appmesh.k8s.aws/v1beta1
kind: VirtualService
metadata:
  name: colorgateway.${APP_NAMESPACE}
  namespace: ${APP_NAMESPACE}
spec:
  meshName: ${MESH_NAME}
  virtualRouter:
    listeners:
      - portMapping:
          port: 9080
          protocol: http
  routes:
    - name: color-route
      http:
        match:
          prefix: /color
        action:
          weightedTargets:
            - virtualNodeName: colorgateway
              weight: 1
---
apiVersion: v1
kind: Service
metadata:
  name: colorgateway
  namespace: ${APP_NAMESPACE}
  labels:
    app: colorgateway
spec:
  ports:
    - port: 9080
      name: http
  selector:
    app: colorgateway
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: colorgateway
  namespace: ${APP_NAMESPACE}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: colorgateway
      version: v1
  template:
    metadata:
      labels:
        app: colorgateway
        version: v1
    spec:
      containers:
        - name: colorgateway
          image: ${COLOR_GATEWAY_IMAGE}
          ports:
            - containerPort: 9080
          env:
            - name: "SERVER_PORT"
              value: "9080"
            - name: "COLOR_TELLER_ENDPOINT"
              value: "colorteller.${APP_NAMESPACE}:9080"
---
apiVersion: v1
kind: Service
metadata:
  name: colorteller
  namespace: ${APP_NAMESPACE}
  labels:
    app: colorteller
spec:
  ports:
    - port: 9080
      name: http
  selector:
    app: colorteller
    version: white
---

# white
apiVersion: apps/v1
kind: Deployment
metadata:
  name: colorteller
  namespace: ${APP_NAMESPACE}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: colorteller
      version: white
  template:
    metadata:
      labels:
        app: colorteller
        version: white
    spec:
      containers:
        - name: colorteller
          image: ${COLOR_TELLER_IMAGE}
          ports:
            - containerPort: 9080
          env:
            - name: "SERVER_PORT"
              value: "9080"
            - name: "COLOR"
              value: "white"
---
# black
apiVersion: v1
kind: Service
metadata:
  name: colorteller-black
  namespace: ${APP_NAMESPACE}
  labels:
    app: colorteller
    version: black
spec:
  ports:
    - port: 9080
      name: http
  selector:
    app: colorteller
    version: black
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: colorteller-black
  namespace: ${APP_NAMESPACE}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: colorteller
      version: black
  template:
    metadata:
      labels:
        app: colorteller
        version: black
    spec:
      containers:
        - name: colorteller
          image: ${COLOR_TELLER_IMAGE}
          ports:
            - containerPort: 9080
          env:
            - name: "SERVER_PORT"
              value: "9080"
            - name: "COLOR"
              value: "black"
---
# blue
apiVersion: v1
kind: Service
metadata:
  name: colorteller-blue
  namespace: ${APP_NAMESPACE}
  labels:
    app: colorteller
    version: blue
spec:
  ports:
    - port: 9080
      name: http
  selector:
    app: colorteller
    version: blue
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: colorteller-blue
  namespace: ${APP_NAMESPACE}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: colorteller
      version: blue
  template:
    metadata:
      labels:
        app: colorteller
        version: blue
    spec:
      containers:
        - name: colorteller
          image: ${COLOR_TELLER_IMAGE}
          ports:
            - containerPort: 9080
          env:
            - name: "SERVER_PORT"
              value: "9080"
            - name: "COLOR"
              value: "blue"
---
# red
apiVersion: v1
kind: Service
metadata:
  name: colorteller-red
  namespace: ${APP_NAMESPACE}
  labels:
    app: colorteller
    version: red
spec:
  ports:
    - port: 9080
      name: http
  selector:
    app: colorteller
    version: red
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: colorteller-red
  namespace: ${APP_NAMESPACE}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: colorteller
      version: red
  template:
    metadata:
      labels:
        app: colorteller
        version: red
    spec:
      containers:
        - name: colorteller
          image: ${COLOR_TELLER_IMAGE}
          ports:
            - containerPort: 9080
          env:
            - name: "SERVER_PORT"
              value: "9080"
            - name: "COLOR"
              value: "red"
---

